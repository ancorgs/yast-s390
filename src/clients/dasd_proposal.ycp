/**
 * File:	clients/dasd_proposal.ycp
 * Package:	S/390 specific configuration
 * Summary:	Proposal function dispatcher
 * Authors:	Jiri Srain <jsrain@suse.cz>
 *
 * Proposal function dispatcher for dasd configuration.
 */

{

    textdomain "s390";

    import "DASDController";
    import "Wizard";
    import "Storage";

    string func  = (string) WFM::Args(0);
    map    param = (map) WFM::Args(1);
    map    ret   = $[];

    // Make proposal for installation/configuration...
    if ( func == "MakeProposal" )
    {
	list summary = DASDController::Summary();
	if (size (summary) == 0)
	    // text for installation summary
	    summary = [ _("No DASD disk detected") ];
	// Fill return map
	ret =
	    $[ "raw_proposal"	: summary,
	       "warning"	: nil,
	       "warning_level"	: nil,
	    ];
    }
    // Run an interactive workflow
    else if ( func == "AskUser" )
    {
	Wizard::CreateDialog();
	Storage::ActivateHld(false);
	any sequence = WFM::CallFunction ("inst_dasd", []);
	Storage::ReReadTargetMap();
	Wizard::CloseDialog();

	// Fill return map
	ret =
	    $[ "workflow_sequence" : sequence
	];
    }
    // Return human readable titles for the proposal
    else if ( func == "Description" )
    {
	if (! DASDController::IsAvailable ())
	    return nil;
	// Fill return map
	ret =
	    // section name in proposal dialog
	    $[ "rich_text_title" : _("DASD"),
		// section name in proposal - menu item
	       "menu_title"      : _("&DASD"),
	       "id"              : "dasd"
	    ];
    }
    else if ( func == "Write" )
    {
	DASDController::Write ();
    }

    return ret;

/* EOF */
}

