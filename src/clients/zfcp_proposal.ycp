/*
 * Copyright (c) 2012 Novell, Inc.
 *
 * All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of version 2 of the GNU General Public License as published
 * by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, contact Novell, Inc.
 *
 * To contact Novell about this file by physical or electronic mail, you may
 * find current contact information at www.novell.com.
 */

/**
 * File:	clients/zfcp_proposal.ycp
 * Package:	S/390 specific configuration
 * Summary:	Proposal function dispatcher
 * Authors:	Jiri Srain <jsrain@suse.cz>
 *
 * Proposal function dispatcher for zfcp configuration.
 */
{
    textdomain "s390";

    import "ZFCPController";
    import "Wizard";

    string func  = (string) WFM::Args(0);
    map    param = (map) WFM::Args(1);
    map    ret   = $[];

    // Make proposal for installation/configuration...
    if ( func == "MakeProposal" )
    {
	list summary = ZFCPController::Summary();
	if (isempty(summary))
	    // text for installation summary
	    summary = [ _("No zFCP device configured") ];
	// Fill return map
	ret =
	    $[ "raw_proposal"	: summary,
	       "warning"	: nil,
	       "warning_level"	: nil,
	    ];
    }
    // Run an interactive workflow
    else if ( func == "AskUser" )
    {
	Wizard::CreateDialog ();
	any sequence = WFM::CallFunction ("inst_zfcp", []);
	Wizard::CloseDialog ();
	// Fill return map
	ret =
	    $[ "workflow_sequence" : sequence
	];
    }
    // Return human readable titles for the proposal
    else if ( func == "Description" )
    {
	if (! ZFCPController::IsAvailable ())
	    return nil;
	// Fill return map
	ret =
	    // section name in proposal dialog
	    $[ "rich_text_title" : _("zFCP"),
		// section name in proposal - menu item
	       "menu_title"      : _("&zFCP"),
	       "id"              : "zfcp"
	    ];
    }
    else if ( func == "Write" )
    {
	ZFCPController::Write ();
    }

    return ret;
}
